on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

name: Continuous integration

jobs:

  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly, 1.58.1]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: check --no-default-features
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --no-default-features

      - name: check --no-default-features --features alloc
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --no-default-features --features alloc

      - name: check --no-default-features --features collections
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --no-default-features --features collections

      - name: check --no-default-features --features std
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --no-default-features --features std

      - name: check --no-default-features --features derive
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --no-default-features --features derive

      - name: check --no-default-features --features smol_str
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --no-default-features --features smol_str

      - name: check --no-default-features --features smallvec
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --no-default-features --features smallvec

      - name: check --no-default-features --features smartstring
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --no-default-features --features smartstring

      - name: check --all-features
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --all-features

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly, 1.58.1]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: build --workspace --all-features
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --all-features

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [ stable, beta, nightly, 1.58.1 ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: test --workspace --all-features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features

  fmt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [ stable, beta, nightly, 1.58.1 ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt
      - name: fmt --all -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [ stable, beta, nightly, 1.58.1 ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: clippy
      - name: clippy --workspace --all-features --tests
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --all-features --tests -- -Dwarnings